buildscript {
    repositories {
        jcenter()

    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.12.0')
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.2.RELEASE'
}


allprojects {
    apply plugin: 'idea'
    group = 'com.ec.qsoft'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }
}
//sourceCompatibility = '11'
subprojects {
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'project-report'
    apply plugin: 'java'
//    bootJar {
//        mainClassName = 'com.ec.galavail.rest.cliente.GalavailSpringBootAppInit'
//        classifier = 'boot'
//    }

    sourceCompatibility = '11'
    if (project.plugins.hasPlugin('java')) {
        //manifest.mainAttributes(provider: 'gradle')
        manifest {
            attributes 'provider': 'gradle'
        }
        configurations {
            published
            compile.exclude module: 'spring-boot-starter-logging'
        }
        dependencyManagement {
            imports {
//                mavenBom("org.springframework.boot:spring-boot-dependencies:2.3.2.RELEASE")
                mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            }
        }

        dependencies {

            implementation 'org.springframework.boot:spring-boot'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            implementation 'org.springframework.boot:spring-boot-starter-jdbc'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            compileOnly 'org.projectlombok:lombok'
//            developmentOnly 'org.springframework.boot:spring-boot-devtools'
            annotationProcessor 'org.projectlombok:lombok'
            testImplementation('org.springframework.boot:spring-boot-starter-test') {
                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            }
        }
    }

}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
test {
    useJUnitPlatform()
}
